{
	"name": "newbranch",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdata",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "dept",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputempdept",
						"type": "DatasetReference"
					},
					"name": "empcount"
				},
				{
					"dataset": {
						"referenceName": "outputempdept",
						"type": "DatasetReference"
					},
					"name": "joinout"
				}
			],
			"transformations": [
				{
					"name": "deptcount"
				},
				{
					"name": "joinempdept"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp as string,",
				"          name as string,",
				"          dept as string,",
				"          grade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee",
				"source(output(",
				"          dept as string,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"employee aggregate(groupBy(dept),",
				"     Total_Employees = count(emp)) ~> deptcount",
				"employee, dept join(employee@dept == dept@dept,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinempdept",
				"deptcount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empcount'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> empcount",
				"joinempdept sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['joinout'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          emp,",
				"          name,",
				"          dept = employee@dept,",
				"          grade,",
				"          deptname",
				"     ),",
				"     partitionBy('hash', 1)) ~> joinout"
			]
		}
	}
}