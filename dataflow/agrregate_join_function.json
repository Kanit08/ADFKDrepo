{
	"name": "agrregate_join_function",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdata",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "empdata",
						"type": "DatasetReference"
					},
					"name": "empfresh"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputempdept",
						"type": "DatasetReference"
					},
					"name": "outputaggremp"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "joinagrregateemp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp as string,",
				"          name as string,",
				"          dept as string,",
				"          grade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          emp as string,",
				"          name as string,",
				"          dept as string,",
				"          grade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empfresh",
				"source1 aggregate(groupBy(dept),",
				"     totalemp = count(emp)) ~> aggregate1",
				"aggregate1, empfresh join(aggregate1@dept == empfresh@dept,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinagrregateemp",
				"joinagrregateemp sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['outputjoinaggremp'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputaggremp"
			]
		}
	}
}