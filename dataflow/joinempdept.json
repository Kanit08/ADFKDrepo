{
	"name": "joinempdept",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdata",
						"type": "DatasetReference"
					},
					"name": "emp"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputempdept",
						"type": "DatasetReference"
					},
					"name": "outdepemp"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp as string,",
				"          name as string,",
				"          dept as string,",
				"          grade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"source(output(",
				"          dept as string,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"emp, dept join(emp@dept == dept@dept,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['payrollempout'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          employee = emp,",
				"          name,",
				"          grade,",
				"          {department name} = deptname",
				"     ),",
				"     partitionBy('hash', 1)) ~> outdepemp"
			]
		}
	}
}