{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "practicekdadf"
		},
		"trigger1_properties_copydatastrproceduretrigger_parameters_tablenamefrompipeline": {
			"type": "string",
			"defaultValue": "Table1"
		},
		"trigger1_properties_copydatastrproceduretrigger_parameters_dbnamefrompipeline": {
			"type": "string",
			"defaultValue": "dbsource"
		},
		"trigger1_properties_copydatastrproceduretrigger_parameters_destinationtable": {
			"type": "string",
			"defaultValue": "table2"
		},
		"trigger1_properties_copydatastrproceduretrigger_parameters_destinationdbname": {
			"type": "string",
			"defaultValue": "dbdestination"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/newbranch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empdata",
								"type": "DatasetReference"
							},
							"name": "employee"
						},
						{
							"dataset": {
								"referenceName": "dept",
								"type": "DatasetReference"
							},
							"name": "dept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "empcount"
						},
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "joinout"
						}
					],
					"transformations": [
						{
							"name": "deptcount"
						},
						{
							"name": "joinempdept"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp as string,",
						"          name as string,",
						"          dept as string,",
						"          grade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"source(output(",
						"          dept as string,",
						"          deptname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> dept",
						"employee aggregate(groupBy(dept),",
						"     Total_Employees = count(emp)) ~> deptcount",
						"employee, dept join(employee@dept == dept@dept,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinempdept",
						"deptcount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['empcount'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> empcount",
						"joinempdept sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['joinout'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          emp,",
						"          name,",
						"          dept = employee@dept,",
						"          grade,",
						"          deptname",
						"     ),",
						"     partitionBy('hash', 1)) ~> joinout"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameterizeddata')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "parameterized",
								"type": "DatasetReference"
							},
							"name": "parameterisedfilter"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     deptpar as string",
						"}",
						"source(output(",
						"          emp as string,",
						"          name as string,",
						"          dept as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> parameterisedfilter",
						"parameterisedfilter filter(dept == $deptpar) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['parameterfilter'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "pivotgender",
								"type": "DatasetReference"
							},
							"name": "PIVOT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivotgender"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp as string,",
						"          name as string,",
						"          dept as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PIVOT",
						"PIVOT pivot(groupBy(dept),",
						"     pivotBy(gender),",
						"     {} = count(gender),",
						"     columnNaming: 'Employee_$N$V_person',",
						"     lateral: false) ~> pivotgender",
						"pivotgender sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrogate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "pivotgender",
								"type": "DatasetReference"
							},
							"name": "surrogate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp as string,",
						"          name as string,",
						"          dept as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> surrogate",
						"surrogate keyGenerate(output(rownumber as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey",
						"surrogateKey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/windowtransfer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "windowtransferin",
								"type": "DatasetReference"
							},
							"name": "transferwindow"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputempdept",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "window"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp as short,",
						"          name as string,",
						"          dept as string,",
						"          gender as string,",
						"          salary as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> transferwindow",
						"transferwindow window(over({average salary} = dept),",
						"     asc(salary, true),",
						"     avgsalary = avg(salary)) ~> window",
						"window sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['transferwindow'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Split_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Splitdata",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Splitdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employedata": {},
									"sinkIT": {},
									"sinkHR": {},
									"sinkFinance": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T11:03:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "filterdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"inputdt": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-07T08:18:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameterdataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "parameterizeddata",
								"type": "DataFlowReference",
								"parameters": {
									"deptpar": {
										"value": "'@{pipeline().parameters.deptname}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"parameterisedfilter": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"deptname": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-10T12:35:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/parameterizeddata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wranglingpractice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "WranglingDTFoverview",
								"type": "DataFlowReference",
								"datasetParameters": {
									"empdata": {},
									"UserQueryoutputempdept": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryoutputempdept",
											"dataset": {
												"referenceName": "outputempdept",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryoutputempdept"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-10T16:14:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copydatastrproceduretrigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"tablenamefrompipeline": "[parameters('trigger1_properties_copydatastrproceduretrigger_parameters_tablenamefrompipeline')]",
							"dbnamefrompipeline": "[parameters('trigger1_properties_copydatastrproceduretrigger_parameters_dbnamefrompipeline')]",
							"destinationtable": "[parameters('trigger1_properties_copydatastrproceduretrigger_parameters_destinationtable')]",
							"destinationdbname": "[parameters('trigger1_properties_copydatastrproceduretrigger_parameters_destinationdbname')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2025-02-04T11:43:00",
						"endTime": "2025-02-04T13:44:51",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}